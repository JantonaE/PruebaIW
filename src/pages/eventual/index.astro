---
import Container from "../../components/container.astro";
import Layout from "../../layouts/Layout.astro";
import * as dbEventuals from "../../lib/mongo/eventual.js";
import * as utils from "../../lib/utils"
import * as cloudinary from "../../lib/cloudinary"
import { Eventual } from "../../api/Eventual";
import { getUser } from "../../lib/auth";

let query;
let filter = false;
if (Astro.request.method === "POST") {
  const token = Astro.cookies.get("accessToken");
  
  let verify = await utils.verifyAuth(token === undefined ? token : token!.value);

  console.log(verify);

  if(verify.status === "unauthorized"){
    Astro.response.status = 401;
    Astro.response.statusText = "Unauthorized";
    return Astro.redirect("/auth/401");
  } else {
    try {
      const data = await Astro.request.formData();
      const action = data.get("action");


      if(action === "DELETE") {
        const id = data.get("id");
        dbEventuals.deleteEventual(id!);

        return Astro.redirect("/eventual");

      } else if (action === "ADD") {
        const nombre = data.get("nombre");
        const lugar = data.get("lugar");
        const timestamp = data.get("timestamp");
        let username = getUser().nickname;
        // obtener localizacion
        let latitud, longitud;

        try {
            const response = await fetch('https://ipinfo.io/json');
            const data = await response.json();
            const { loc } = data;
            const [lat, lon] = loc.split(',');
        
            // Asignar valores a las variables dentro del bloque fetch
            latitud = lat;
            longitud = lon;
        
            // Aquí puedes usar las coordenadas por separado como desees
            console.log("Ubicación obtenida: Latitud: " + latitud + ", Longitud: " + longitud);
            } catch (error) {
            console.error("Error obteniendo la ubicación ");
        }
        const file = data.getAll("file") as File[];
        
        let imagesRes = await cloudinary.uploadImages(file);
        let images = imagesRes.map((image) => image.url);

        console.log(images);

        let eventual = new Eventual(
          nombre!.toString(),
          timestamp!.toString(),
          lugar!.toString(),
          latitud,
          longitud,
          username, // CAMBIAR A USER LOGGED
          images
        );

        dbEventuals.createEventual(eventual);

        return Astro.redirect("/eventual");
      } if(action == "FILTER"){ // filtrar
        const search = data.get("search");
        console.log(search);
        filter = true;
        console.log(search);
        query = { lugar: search };
        /*
        
        const geocoder = new google.maps.Geocoder();

        // Crear un objeto de solicitud de geocodificación
        const request = { address: postalCode };

        // Realizar la solicitud de geocodificación
        geocoder.geocode(request, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
            const location = results[0].geometry.location;
            const lat = location.lat();
            const lng = location.lng();
            alert(`Latitud: ${lat}, Longitud: ${lng}`);
            } else {
            alert('Error al obtener la información de ubicación.');
            }
        });
        return Astro.redirect("/eventual");
        */
      }
    } catch (error) {
      if (error instanceof Error) {
        console.error(error.message);
      }
    }
}
  }
let eventual;

if (filter){
  console.log("Filter: "+ query);
  eventual = await dbEventuals.findAllEventuals(query);
}else{
  eventual = await dbEventuals.findAllEventuals();
}

---

<Layout title="Eventuals">
  <Container>
    <div class="flex">
      <div class="flex-1 text-center flex items-center flex-col">
        <!-- Contenido del div izquierdo -->
                
        <div class="flex flex-none m-3">
          <form class="w-full max-w-sm" id="filterForm" method="POST" enctype="multipart/form-data">
            <input type="hidden" name="action" value="FILTER" />
            <div class="md:w-1/3">
              <label
              class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
              for="inline-full-name"
              >
              Dirección Postal:
            </label> 
            </div>
            <div class="md:w-2/3"></div>
            <input type="text" name="search" class="m-2 bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500" placeholder="Codigo Postal" />
            <div class="md:flex md:items-center">
              
              <div>
                <button
                  class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-black text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer"
                  type="submit"
                  >
                Filter
                </button>
              </div>
            </div>
          </form>
  
        </div>
       <form class="w-full max-w-sm" id="addForm" method="POST" enctype="multipart/form-data">
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label
                class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
                for="inline-full-name"
                >
              Nombre:
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="inline-full-name"
                name="nombre"
                type="text"
                placeholder="Nombre"
                required
                />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label
                class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
                for="inline-full-name"
                >
              Lugar:
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="inline-email"
                type="number"
                name="lugar"
  
                placeholder="Descripcion de la propiedad" required
                />
            </div>
          </div>
          <div class="md:flex md:items-center mb-6">
            <div class="md:w-1/3">
              <label
                class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
                for="inline-full-name"
                >
              Fecha:
              </label>
            </div>
            <div class="md:w-2/3">
              <input
                class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
                id="inline-email"
                type="date"
                name="timestamp"
                required
                />
            </div>
          </div>
          
          <div class="col-span-2 sm:col-span-1">
              <label for="file" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Subir imagen</label>
              <input type="file" name="file" id="file" accept=".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*" required multiple/>
            </div>
          <input type="hidden" name="action" value="ADD" />
          <div class="md:flex md:items-center">
            <div class="md:w-1/3"></div>
            <div class="md:w-2/3">
              <button
                class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-black text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer"
                type="submit"
                >
              Submit
              </button>
            </div>
          </div>
        </form>
        
      </div>
      <div class="flex-1 text-right">
        <!-- Contenido del div derecho -->
        <div
        class="flex flex-col mb-4 rounded p-5"
        >
        <ul>
          {
          eventual.map((eventual) => (
             <li>
              <div class="flex outline outline-1 mb-4 rounded text-left">
                <div class="me-40 w-40">
                    <p class="m-1">{eventual.nombre} : {eventual.lugar}</p>
                    <p class="m-1">{eventual.timestamp}</p>
                </div>
                <div>
                  {eventual.images.map((image : string) => (
                    <img src={image} alt="" class="w-10 h-10 rounded rounded-full m-2" />
                  ))}
                </div>
                <div class="flex justify-end m-2">
                  <form method="POST" id="formDelete">
                    <input type="hidden" name="id" value={String(eventual._id)} />
                    <input type="hidden" name="action" value="DELETE" />
                    <button type="submit" class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-red-600 text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer">
                      Eliminar
                    </button>
                  </form>
                  <a class="ml-2 rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-blue-600 text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer" href={"/eventual/update?id="+eventual._id}>
                    Editar
                  </a>
                  <a class="ml-2 rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-blue-600 text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer" href={"/eventual/event?id="+eventual._id}>
                    Ver Mas
                  </a>
                </div>

                
                </button>
              </div>
          </li>
          ))
          }
        </ul>
      </div>
      </div>
    </div>
    
    <div class="flex flex-col">

      
      
    </div>
  </Container>
</Layout>