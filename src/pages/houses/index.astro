---
import Container from "../../components/container.astro";
import Layout from "../../layouts/Layout.astro";
import * as dbHouses from "../../lib/mongo/house.js";
import * as utils from "../../lib/utils"
import * as cloudinary from "../../lib/cloudinary"
import { House } from "../../api/House";


if (Astro.request.method === "POST") {
  const token = Astro.cookies.get("accessToken");

  let verify = await utils.verifyAuth(token === undefined ? token : token!.value);

  console.log(verify);

  if(verify.status === "unauthorized"){
    Astro.response.status = 401;
    Astro.response.statusText = "Unauthorized";
    return Astro.redirect("/auth/401");
  } else {
    try {
      const data = await Astro.request.formData();
      const action = data.get("action");


      if(action === "DELETE") {
        const id = data.get("id");
        dbHouses.deleteHouse(id!);

        return Astro.redirect("/houses");

      } else if (action === "ADD") {
        const titulo = data.get("titulo");
        const descripcion = data.get("descripcion");
        // obtener localizacion
        let latitud, longitud;

        try {
            const response = await fetch('https://ipinfo.io/json');
            const data = await response.json();
            const { loc } = data;
            const [lat, lon] = loc.split(',');
        
            // Asignar valores a las variables dentro del bloque fetch
            latitud = lat;
            longitud = lon;
        
            // Aquí puedes usar las coordenadas por separado como desees
            console.log("Ubicación obtenida: Latitud: " + latitud + ", Longitud: " + longitud);
            } catch (error) {
            console.error(`Error obteniendo la ubicación: ${error.message}`);
        }
        const file = data.getAll("file") as File[];
        
        let imagesRes = await cloudinary.uploadImages(file);
        let images = imagesRes.map((image) => image.url);

        console.log(images);

        let house = new House(
          titulo!.toString(),
          descripcion!.toString(),
          latitud,
          longitud,
          images
        );

        dbHouses.createHouse(house);

        return Astro.redirect("/houses");
      }
    } catch (error) {
      if (error instanceof Error) {
        console.error(error.message);
      }
    }
}
  }
  

const house = await dbHouses.findAllHouses();
---

<Layout title="Houses">
  <Container>
    
    <div class="flex flex-col">

      <div
        class="flex flex-col mb-4 outline outline-1 rounded p-5 outline-red-500"
        >
        <ul>
          {
          house.map((house) => (
             <li>
              <div class="flex outline outline-1 mb-4 rounded w-1/2">
                <div class="me-40 w-40">
                    <p>{house.titulo}</p>
                    <p>{house.descripcion}</p>
                </div>
                <div>
                  {house.images.map((image) => (
                    <img src={image} alt="" class="w-10 h-10 rounded rounded-full" />
                  ))}
                </div>
                <div class="justify-end">
                  <form method="POST" id="formDelete">
                    <input type="hidden" name="id" value={String(house._id)} />
                    <input type="hidden" name="action" value="DELETE" />
                    <button type="submit" class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-red-600 text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer">
                    Eliminar
                    </button>
                  </form>
                  <a class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-blue-600 text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer" href={"/houses/update?id="+house._id}>
                    Editar</a>
                </div>
                
                </button>
              </div>
          </li>
          ))
          }
        </ul>
      </div>
      <form class="w-full max-w-sm" id="addForm" method="POST" enctype="multipart/form-data">
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3">
            <label
              class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
              for="inline-full-name"
              >
            Titulo:
            </label>
          </div>
          <div class="md:w-2/3">
            <input
              class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
              id="inline-full-name"
              name="titulo"
              type="text"
              placeholder="Nombre"
              />
          </div>
        </div>
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3">
            <label
              class="block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4"
              for="inline-full-name"
              >
            Descripción:
            </label>
          </div>
          <div class="md:w-2/3">
            <textarea
              class="bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"
              id="inline-email"
              name="descripcion"

              placeholder="Descripcion de la propiedad"
              />
          </div>
        </div>
        
        <div class="col-span-2 sm:col-span-1">
            <label for="file" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Subir imagen</label>
            <input type="file" name="file" id="file" accept=".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*" required multiple/>
          </div>
        <input type="hidden" name="action" value="ADD" />
        <div class="md:flex md:items-center">
          <div class="md:w-1/3"></div>
          <div class="md:w-2/3">
            <button
              class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 px-4 py-2 bg-black text-white hover:bg-gray-800 border-2 border-transparent cursor-pointer"
              type="submit"
              >
            Submit
            </button>
          </div>
        </div>
      </form>
    </div>
  </Container>
</Layout>